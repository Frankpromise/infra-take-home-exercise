apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-microservice
  namespace: dev
  labels:
    app: python-microservice
spec:
  replicas: 2  # Number of replicas
  selector:
    matchLabels:
      app: python-microservice
  template:
    metadata:
      labels:
        app: python-microservice
    spec:
      containers:
      - name: python-microservice
        image: promiserepo/python-microservice:v2  # Update with your image tag
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:  # Liveness probe to check if the container is alive
            httpGet:
              path: /student
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
        readinessProbe:  # Readiness probe to check if the container is ready to serve traffic
          httpGet:
            path: /student
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 5
        imagePullPolicy: Always  # Ensure the latest version is pulled
        env:
        - name: DEBUG_MODE
          value: "false"  # Set debug mode for production
---
apiVersion: v1
kind: Service
metadata:
  name: python-microservice-service
  namespace: dev
spec:
  selector:
    app: python-microservice
  ports:
  - protocol: TCP
    port: 80  # External port
    targetPort: 8080  # Port in the container
  type: NodePort  # NodePort makes the service accessible on a Minikube node
